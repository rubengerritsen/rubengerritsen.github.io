{"version":3,"sources":["webpack:///./src/components/linksToPosts/post-link.js","webpack:///./src/templates/tag-page.js","webpack:///./src/components/tag.js","webpack:///(webpack)/buildin/module.js"],"names":["PostLink","post","className","to","fields","slug","frontmatter","thumbnail","fluid","childImageSharp","alt","title","tags","date","TagPageTemplate","render","props","this","tag","pageContext","Posts","data","allMarkdownRemark","edges","filter","edge","node","map","key","id","siteTitle","site","siteMetadata","location","charAt","toUpperCase","slice","keywords","totalCount","React","Component","pageQuery","Tags","_","kebabCase","module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i"],"mappings":"4FAAA,uEA+BeA,IApBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,uBAASC,UAAU,aACjB,YAAC,OAAD,CAAMC,GAAIF,EAAKG,OAAOC,QACjBJ,EAAKK,YAAYC,WAClB,YAAC,IAAD,CAAKC,MAAOP,EAAKK,YAAYC,UAAUE,gBAAgBD,MAAOE,IAAKT,EAAKK,YAAYK,MAAOT,UAAU,qBAGzG,0BACE,uBACE,YAAC,IAAD,CAAMU,KAAMX,EAAKK,YAAYM,QAE/B,kBAAIV,UAAU,mBACZ,YAAC,OAAD,CAAMC,GAAIF,EAAKG,OAAOC,KAAMH,UAAU,kBACnCD,EAAKK,YAAYK,QAGtB,mBAAKT,UAAU,kBAAmBD,EAAKK,YAAYO,U,wKCpBnDC,E,kGACJC,OAAA,WACE,IAAMC,EAAQC,KAAKD,MACbE,EAAMD,KAAKD,MAAMG,YAAYD,IAC7BE,EAAQH,KAAKD,MAAMK,KAAKC,kBAAkBC,MAC/CC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKpB,YAAYO,QACvCc,KAAI,SAAAF,GAAI,OAAI,YAAC,IAAD,CAAUG,IAAKH,EAAKC,KAAKG,GAAI5B,KAAMwB,EAAKC,UAC/CI,EAAYb,KAAKD,MAAMK,KAAKU,KAAKC,aAAarB,MAEpD,OACE,YAAC,IAAD,CAAQsB,SAAUhB,KAAKD,MAAMiB,SAAUtB,MAAOmB,GAC5C,YAAC,IAAD,CAEEnB,MAAK,KAAMO,EAAIgB,OAAO,GAAGC,cAAgBjB,EAAIkB,MAAM,IACnDC,SAAU,CAAC,GAAGnB,EAAJ,wCAEX,uBAAShB,UAAU,4CACpB,sBAAQA,UAAU,iBAChB,kBAAIA,UAAU,mBAAd,IAAkCgB,EAAlC,IAAwCF,EAAMK,KAAKC,kBAAkBgB,WAArE,MAEF,mBAAKpC,UAAU,cACdkB,M,GArBqBmB,IAAMC,WA6BrB1B,YAER,IAAM2B,EAAS,Y,2GClChBC,E,kGACJ3B,OAAA,WAAU,IACAH,EAASK,KAAKD,MAAdJ,KACR,OACE,mBAAKV,UAAU,kBACZU,GACCA,EAAKe,KAAI,SAAAT,GAAG,OACV,oBAAMU,IAAKV,GACX,YAAC,OAAD,CAAMhB,UAAU,qBAChB0B,IAAKV,EAELf,GAAE,SAAWwC,IAAEC,UAAU1B,IAHzB,IAKEA,GAED,U,GAfMsB,aAsBJE,O,mBC1BfG,EAAOC,QAAU,SAASD,GAoBzB,OAnBKA,EAAOE,kBACXF,EAAOG,UAAY,aACnBH,EAAOI,MAAQ,GAEVJ,EAAOK,WAAUL,EAAOK,SAAW,IACxCC,OAAOC,eAAeP,EAAQ,SAAU,CACvCQ,YAAY,EACZC,IAAK,WACJ,OAAOT,EAAOU,KAGhBJ,OAAOC,eAAeP,EAAQ,KAAM,CACnCQ,YAAY,EACZC,IAAK,WACJ,OAAOT,EAAOW,KAGhBX,EAAOE,gBAAkB,GAEnBF","file":"component---src-templates-tag-page-js-56ca73b1d5e24e1abbaf.js","sourcesContent":["/* **********************************************\n * Post-link is a card like element that contains\n * a thumbnail, title, tags and a link to \n * a markdown post \n * *******************************************/\n\nimport React from \"react\"\nimport { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport Tags from \"../tag\"\n\nconst PostLink = ({ post }) => (\n  <article className=\"post-link\">\n    <Link to={post.fields.slug}>\n      {!!post.frontmatter.thumbnail && (\n        <Img fluid={post.frontmatter.thumbnail.childImageSharp.fluid} alt={post.frontmatter.title} className=\"post-link-image\"/>\n      )}\n    </Link>\n    <header>\n      <div>\n        <Tags tags={post.frontmatter.tags}/>\n      </div>\n      <h2 className=\"post-link-title\">\n        <Link to={post.fields.slug} className=\"post-link-blog\">\n          {post.frontmatter.title}\n        </Link>\n      </h2>\n      <div className=\"post-link-meta\" >{post.frontmatter.date}</div>\n    </header>\n  </article>\n)\nexport default PostLink\n\n\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/home_layout\"\nimport SEO from \"../components/seo\"\nimport PostLink from \"../components/linksToPosts/post-link\"\n\nclass TagPageTemplate extends React.Component {\n  render() {\n    const props = this.props\n    const tag = this.props.pageContext.tag\n    const Posts = this.props.data.allMarkdownRemark.edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />)\n    const siteTitle = this.props.data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          // title={`#${tag}`}\n          title={`#${tag.charAt(0).toUpperCase() + tag.slice(1)}`}\n          keywords={[`${tag}`, `blog`, `gatsby`, `javascript`, `react`]}\n        />\n         <article className=\"post-content-blog page-template no-image\">\n        <header className=\"tag-page-head\">\n          <h1 className=\"page-head-title\">#{tag}({props.data.allMarkdownRemark.totalCount})</h1>\n        </header>\n        <div className=\"grids-blog\">\n        {Posts}\n      </div>\n      </article>\n    </Layout>\n    )\n  }\n}\n\nexport default TagPageTemplate\n\nexport const pageQuery = graphql`\n  query PostByTag($tag: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    allMarkdownRemark(filter: { frontmatter: { tags: { in: [$tag] } } }, sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\n\nclass Tags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className=\"post-card-tags\">\n        {tags &&\n          tags.map(tag => (\n            <span key={tag}>\n            <Link className=\"post-card-tag-link\"\n            key={tag}\n            // style={{ textDecoration: \"none\" }}\n            to={`/tags/${_.kebabCase(tag)}`}\n            >\n            #{tag}\n            </Link>\n            {\" \"}</span>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default Tags;","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"sourceRoot":""}