{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts/votca_tests/","result":{"data":{"site":{"siteMetadata":{"title":"rubengerritsen.nl","author":"Ruben Gerritsen"}},"markdownRemark":{"id":"c7e9c6a9-afea-50fc-aad3-883f209611c8","excerpt":"Using The Tests Building Tests To enable tests run  and then  to actually build them or compile VOTCA with the option enabled. Running Tests To run all the unitâ€¦","html":"<h1 id=\"using-the-tests\" style=\"position:relative;\"><a href=\"#using-the-tests\" aria-label=\"using the tests permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using The Tests</h1>\n<h2 id=\"building-tests\" style=\"position:relative;\"><a href=\"#building-tests\" aria-label=\"building tests permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Building Tests</h2>\n<p>To enable tests run <code class=\"language-text\">cmake -DENABLE_TESTING=ON</code> and then <code class=\"language-text\">make</code> to actually build them or compile VOTCA with the option enabled.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">cmake -DBUILD_CSGAPPS<span class=\"token operator\">=</span>ON -DBUILD_XTP<span class=\"token operator\">=</span>ON -DENABLE_TESTING<span class=\"token operator\">=</span>ON` -DCMAKE_INSTALL_PREFIX<span class=\"token operator\">=</span><span class=\"token variable\">${prefix}</span> <span class=\"token punctuation\">..</span>\ncmake --build <span class=\"token builtin class-name\">.</span> -- -j<span class=\"token operator\">&lt;</span>number of cores<span class=\"token operator\">></span>\ncmake --build <span class=\"token builtin class-name\">.</span> --target <span class=\"token function\">install</span></code></pre></div>\n<h2 id=\"running-tests\" style=\"position:relative;\"><a href=\"#running-tests\" aria-label=\"running tests permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Running Tests</h2>\n<p>To run all the unit tests, simply run <code class=\"language-text\">make test</code>. Or if you only want to run one specific test run <code class=\"language-text\">ctest -R &lt;name_of_test&gt;</code>. <code class=\"language-text\">ctest</code> also has a nice option to get the output from a test displayed if the test fails <code class=\"language-text\">--output-on-failure</code>, this is very useful if you are debugging or writing a test. This output can also be redirected to a file for later inspection.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ctest -R <span class=\"token operator\">&lt;</span>name_of_test<span class=\"token operator\">></span> --output-on-failure <span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>log_name<span class=\"token operator\">></span>.log</code></pre></div>\n<h1 id=\"making-a-test\" style=\"position:relative;\"><a href=\"#making-a-test\" aria-label=\"making a test permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Making A Test</h1>\n<p>A test needs a source file, in votca-xtp generally named <code class=\"language-text\">test_&lt;name_of_test&gt;.cc</code>, which lives in the <code class=\"language-text\">&lt;where_xtp_is&gt;/src/tests</code> directory. <code class=\"language-text\">cmake</code> needs to know that the test exists, this is done by adding the line <code class=\"language-text\">list(APPEND test_&lt;name_of_test&gt;)</code> to the <code class=\"language-text\">CMakeLists.txt</code> file in the tests directory. Optional data files for the test can be stored in the  <code class=\"language-text\">&lt;where_xtp_is&gt;/src/tests/DataFiles/&lt;name_of_test&gt;</code> directory.</p>\n<h2 id=\"the-test-source-file\" style=\"position:relative;\"><a href=\"#the-test-source-file\" aria-label=\"the test source file permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Test Source File</h2>\n<h1 id=\"usefull-tools-while-making-a-test\" style=\"position:relative;\"><a href=\"#usefull-tools-while-making-a-test\" aria-label=\"usefull tools while making a test permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usefull tools while making a test</h1>\n<h2 id=\"write-eigen-matrix-to-file\" style=\"position:relative;\"><a href=\"#write-eigen-matrix-to-file\" aria-label=\"write eigen matrix to file permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Write Eigen Matrix to File</h2>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;votca/tools/eigenio_matrixmarket.h></span></span>\n\nvotca<span class=\"token operator\">::</span>tools<span class=\"token operator\">::</span>EigenIO_MatrixMarket<span class=\"token operator\">::</span><span class=\"token function\">WriteMatrix</span><span class=\"token punctuation\">(</span>\n      std<span class=\"token operator\">::</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span>XTP_TEST_DATA_FOLDER<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"/&lt;folder_in_DataFiles>/&lt;matrix_name>.mm\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token operator\">&lt;</span>matrixToWriteToFile<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"read-eigen-matrix-from-file\" style=\"position:relative;\"><a href=\"#read-eigen-matrix-from-file\" aria-label=\"read eigen matrix from file permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Read Eigen Matrix from File</h2>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;votca/tools/eigenio_matrixmarket.h></span></span>\n\nEigen<span class=\"token operator\">::</span>MatrixXd matrix <span class=\"token operator\">=</span> votca<span class=\"token operator\">::</span>tools<span class=\"token operator\">::</span>EigenIO_MatrixMarket<span class=\"token operator\">::</span><span class=\"token function\">ReadMatrix</span><span class=\"token punctuation\">(</span>\n      std<span class=\"token operator\">::</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span>XTP_TEST_DATA_FOLDER<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"/&lt;folder_in_DataFiles>/&lt;matrix_name>.mm\"</span><span class=\"token punctuation\">,</span>\n      orbitalsReference<span class=\"token punctuation\">.</span><span class=\"token function\">MOs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">eigenvectors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"compare-eigen-matrices\" style=\"position:relative;\"><a href=\"#compare-eigen-matrices\" aria-label=\"compare eigen matrices permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Compare Eigen Matrices</h2>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">bool</span> checkEqual <span class=\"token operator\">=</span> eigenMatrix1<span class=\"token punctuation\">.</span><span class=\"token function\">isApprox</span><span class=\"token punctuation\">(</span>eigenMatrix2<span class=\"token punctuation\">,</span> tolerance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/posts/votca_tests/#using-the-tests\">Using The Tests</a></p>\n<ul>\n<li><a href=\"/posts/votca_tests/#building-tests\">Building Tests</a></li>\n<li><a href=\"/posts/votca_tests/#running-tests\">Running Tests</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/posts/votca_tests/#making-a-test\">Making A Test</a></p>\n<ul>\n<li><a href=\"/posts/votca_tests/#the-test-source-file\">The Test Source File</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/posts/votca_tests/#usefull-tools-while-making-a-test\">Usefull tools while making a test</a></p>\n<ul>\n<li><a href=\"/posts/votca_tests/#write-eigen-matrix-to-file\">Write Eigen Matrix to File</a></li>\n<li><a href=\"/posts/votca_tests/#read-eigen-matrix-from-file\">Read Eigen Matrix from File</a></li>\n<li><a href=\"/posts/votca_tests/#compare-eigen-matrices\">Compare Eigen Matrices</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"Unit testing in VOTCA","date":"August 30, 2020","description":"Overview of how to develop for and use the unit test in votca.","thumbnail":null}}},"pageContext":{"slug":"/posts/votca_tests/","previous":{"fields":{"slug":"/posts/votca_orbitals/"},"frontmatter":{"title":"Ordering of orbitals in VOTCA, ORCA and MOLDEN","tags":["votca-xtp","votca","orbitals","dft","quantumchemistry","molden"]}},"next":{"fields":{"slug":"/docs/python/Python_online_resources/"},"frontmatter":{"title":"How to Learn Python Resources","tags":["python","resources"]}}}},"staticQueryHashes":["63159454"]}