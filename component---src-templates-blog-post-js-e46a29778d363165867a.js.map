{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["require","BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","location","frontmatter","description","excerpt","className","thumbnail","date","style","backgroundImage","childImageSharp","fluid","src","async","dangerouslySetInnerHTML","__html","html","React","Component","pageQuery"],"mappings":"oSAOAA,EAAQ,Q,IAMFC,E,kGACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAEpD,OACE,kBAAC,IAAD,CAAQC,SAAUR,KAAKC,MAAMO,SAAUD,MAAOH,GAC5C,kBAAC,IAAD,CACEG,MAAOR,EAAKU,YAAYF,MACxBG,YAAaX,EAAKU,YAAYC,aAAeX,EAAKY,UAEpD,6BACEC,UAAS,iBAAkBb,EAAKU,YAAYI,WAAjB,cAE3Bd,EAAKU,YAAYI,WACf,yBAAKD,UAAU,uBACb,wBAAIA,UAAU,cAAcb,EAAKU,YAAYF,OAC7C,yBAAKK,UAAU,aAAab,EAAKU,YAAYK,SAG9Cf,EAAKU,YAAYI,WAClB,yBAAKD,UAAU,sBAAsBG,MAAO,CAACC,gBAAgB,OAAQjB,EAAKU,YAAYI,UAAUI,gBAAgBC,MAAMC,IAA1D,MAC1D,wBAAIP,UAAU,cAAcb,EAAKU,YAAYF,OAC7C,yBAAKK,UAAU,aAAab,EAAKU,YAAYK,OAG3D,4BAAQK,IAAI,0FAA0FC,OAAK,IACjG,yBACER,UAAU,oBACVS,wBAAyB,CAAEC,OAAQvB,EAAKwB,QAG1C,4BAAQX,UAAU,2B,GAhCGY,IAAMC,WA4CtB5B,YAER,IAAM6B,EAAS","file":"component---src-templates-blog-post-js-e46a29778d363165867a.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nrequire(`katex/dist/katex.min.css`)\n\nimport \"../style/normalize.css\"\nimport \"../style/all.scss\"\n\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <article\n          className={`post-content ${post.frontmatter.thumbnail || `no-image`}`}\n        >\n        {!post.frontmatter.thumbnail && (\n            <div className=\"post-thumbnail-blog\">\n              <h1 className=\"post-title\">{post.frontmatter.title}</h1>\n              <div className=\"post-meta\">{post.frontmatter.date}</div>\n            </div>\n          )}\n          {!!post.frontmatter.thumbnail && (\n            <div className=\"post-thumbnail-blog\" style={{backgroundImage: `url(${post.frontmatter.thumbnail.childImageSharp.fluid.src})`}}>\n              <h1 className=\"post-title\">{post.frontmatter.title}</h1>\n              <div className=\"post-meta\">{post.frontmatter.date}</div>\n            </div>\n          )}\n<script src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML' async></script>\n          <div\n            className=\"post-content-body\"\n            dangerouslySetInnerHTML={{ __html: post.html }}\n          />\n\n          <footer className=\"post-content-footer\">\n            {/* There are two options for how we display the byline/author-info.\n        If the post has more than one author, we load a specific template\n        from includes/byline-multiple.hbs, otherwise, we just use the\n        default byline. */}\n          </footer>\n        </article>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        thumbnail {\n          childImageSharp {\n            fluid(maxWidth: 1360) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}