{"version":3,"sources":["webpack:///(webpack)/buildin/module.js","webpack:///./src/components/home_layout.js","webpack:///./src/pages/tags.js"],"names":["module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","LayoutHome","props","title","React","useState","toggleNav","setToggleNav","className","id","href","onClick","aria-label","role","aria-controls","to","TagIndex","data","siteTitle","site","siteMetadata","tags","allMarkdownRemark","distinct","map","tag","key","style","textDecoration","_","kebabCase","query","render"],"mappings":"sGAAAA,EAAOC,QAAU,SAASD,GAoBzB,OAnBKA,EAAOE,kBACXF,EAAOG,UAAY,aACnBH,EAAOI,MAAQ,GAEVJ,EAAOK,WAAUL,EAAOK,SAAW,IACxCC,OAAOC,eAAeP,EAAQ,SAAU,CACvCQ,YAAY,EACZC,IAAK,WACJ,OAAOT,EAAOU,KAGhBJ,OAAOC,eAAeP,EAAQ,KAAM,CACnCQ,YAAY,EACZC,IAAK,WACJ,OAAOT,EAAOW,KAGhBX,EAAOE,gBAAkB,GAEnBF,I,kCCpBR,iDA2DeY,IAxDI,SAAAC,GAAU,IACnBC,EAAoBD,EAApBC,MAAOT,EAAaQ,EAAbR,SADW,EAEQU,IAAMC,UAAS,GAA1CC,EAFmB,KAERC,EAFQ,KAG1B,OACE,mBAAKC,UAAS,iBAAkBF,EAAS,sBACvC,sBAAQE,UAAU,aAChB,mBAAKC,GAAG,OAAOD,UAAU,uBACvB,iBACEA,UAAU,aACVE,KAAI,QACJC,QAAS,kBAAMJ,GAAcD,KAE7B,mBACEE,UAAU,gCACVI,aAAW,OACXC,KAAK,SACLC,gBAAc,cAEd,mBAAKN,UAAU,iBACb,mBAAKA,UAAU,qBAPnB,IAQS,mBAAKA,UAAU,mCAAf,UAGX,mBAAKC,GAAG,OAAOD,UAAU,mBACvB,kBAAIA,UAAU,MAAMK,KAAK,QACvB,kBAAIL,UAAU,uBAAuBK,KAAK,YACxC,YAAC,OAAD,CAAME,GAAE,KAAR,SAEF,kBAAIP,UAAU,WAAWK,KAAK,YAC5B,YAAC,OAAD,CAAME,GAAE,SAAR,SAEF,kBAAIP,UAAU,WAAWK,KAAK,YAC5B,YAAC,OAAD,CAAME,GAAE,aAAR,aAEF,kBAAIP,UAAU,WAAWK,KAAK,YAC5B,YAAC,OAAD,CAAME,GAAE,WAAR,WAEF,kBAAIP,UAAU,YAAYK,KAAK,YAC7B,YAAC,OAAD,CAAME,GAAE,UAAR,cAMV,oBAAMN,GAAG,YAAYD,UAAU,aAC7B,mBAAKC,GAAG,OAAOD,UAAU,mBACtBd,IAGL,sBAAQc,UAAU,aAClB,YAAC,OAAD,CAAMO,GAAE,KAAQZ,O,kCCrDtB,gHAWMa,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACZC,EAAYD,EAAKE,KAAKC,aAAajB,MACnCkB,EAAOJ,EAAKK,kBAAkBC,SAEpC,OACE,YAAC,IAAD,CAAYpB,MAAOe,GACjB,YAAC,IAAD,CACEf,MAAM,SAER,sBAAQK,UAAU,iBACd,kBAAIA,UAAU,mBAAd,SAEJ,mBAAKA,UAAU,iBACZa,EAAKG,KAAK,SAAAC,GACT,OACI,YAAC,OAAD,CACAC,IAAKD,EACLE,MAAO,CAAEC,eAAgB,QACzBb,GAAE,SAAWc,IAAEC,UAAUL,IAEzB,mBAAKjB,UAAU,YAAf,IAA4BiB,UAsB3B,mBAAAvB,GAAK,OAClB,YAAC,cAAD,CACE6B,MAfY,WAgBZC,OAAQ,SAAAf,GAAI,OACV,YAACD,EAAD,CAAUd,OAAK,EAACe,KAAMA","file":"component---src-pages-tags-js-eec6e5947f13848a331e.js","sourcesContent":["module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst LayoutHome = props => {\n  const { title, children } = props\n  const [toggleNav, setToggleNav] = React.useState(false)\n  return (\n    <div className={`site-wrapper ${toggleNav ? `site-head-open` : ``}`}>\n      <header className=\"site-head\">\n        <div id=\"menu\" className=\"site-head-container\">\n          <a\n            className=\"nav-burger\"\n            href={`#menu`}\n            onClick={() => setToggleNav(!toggleNav)}\n          >\n            <div\n              className=\"hamburger hamburger--collapse\"\n              aria-label=\"Menu\"\n              role=\"button\"\n              aria-controls=\"navigation\"\n            >\n              <div className=\"hamburger-box\">\n                <div className=\"hamburger-inner\" />\n              </div> <div className=\"hamburger-text-menu-text hidden\">Menu</div>\n            </div>\n          </a>\n          <nav id=\"swup\" className=\"site-head-right\">\n            <ul className=\"nav\" role=\"menu\">\n              <li className=\"nav-home nav-current\" role=\"menuitem\">\n                <Link to={`/`}>Home</Link>\n              </li> \n              <li className=\"nav-tags\" role=\"menuitem\">\n                <Link to={`/docs`}>Docs</Link>\n              </li>\n              <li className=\"nav-tags\" role=\"menuitem\">\n                <Link to={`/projects`}>Projects</Link>\n              </li>\n              <li className=\"nav-tags\" role=\"menuitem\">\n                <Link to={`/search`}>Search</Link>\n              </li>\n              <li className=\"nav-about\" role=\"menuitem\">\n                <Link to={`/about`}>About</Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </header>\n      <main id=\"site-main\" className=\"site-main\">\n        <div id=\"swup\" className=\"transition-fade\">\n          {children}\n        </div>\n      </main>\n      <footer className=\"site-foot\">\n      <Link to={`/`}>{title}</Link> \n      </footer>\n    </div>\n  )\n}\n\nexport default LayoutHome\n","import React from \"react\"\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport LayoutHome from \"../components/home_layout\"\nimport SEO from \"../components/seo\"\n\nimport \"../style/normalize.css\"\nimport \"../style/all.scss\"\n\nconst TagIndex = ({ data }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const tags = data.allMarkdownRemark.distinct\n\n  return (\n    <LayoutHome title={siteTitle}>\n      <SEO\n        title=\"Tags\" \n      />\n      <header className=\"tag-page-head\">\n          <h1 className=\"page-head-title\">Tags</h1>\n      </header>\n      <div className=\"tag-container\">\n        {tags.map( tag => {\n          return(\n              <Link\n              key={tag}\n              style={{ textDecoration: \"none\" }}\n              to={`/tags/${_.kebabCase(tag)}`}\n              >\n              <div className=\"tag-item\">#{tag}</div>\n              </Link>\n            )\n          })}\n        </div>\n    </LayoutHome>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark {\n      distinct(field: frontmatter___tags)\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <TagIndex props data={data} />\n    )}\n  />\n)\n"],"sourceRoot":""}