{"componentChunkName":"component---src-templates-doc-post-js","path":"/docs/python/Python_FileIO_StringFormatting/","result":{"data":{"site":{"siteMetadata":{"title":"rubengerritsen.nl","author":"Ruben Gerritsen"}},"markdownRemark":{"id":"32b2f9dd-6966-51bb-be59-2e8489dc4922","excerpt":"File IO To start we need a file, copy paste the following into a file called  that you save in the same folder as your python script. Reading To read a file we…","html":"<h1 id=\"file-io\" style=\"position:relative;\"><a href=\"#file-io\" aria-label=\"file io permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>File IO</h1>\n<p>To start we need a file, copy paste the following into a file called <code class=\"language-text\">input.txt</code> that you save in the same folder as your python script.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Some comment that is not very useful\ntemperature: 20 \ndistance: 100\ncoordinates 1 2 3.0</code></pre></div>\n<h2 id=\"reading\" style=\"position:relative;\"><a href=\"#reading\" aria-label=\"reading permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reading</h2>\n<p>To read a file we need to open it in read mode this is done with the <code class=\"language-text\">&quot;r&quot;</code> in a <code class=\"language-text\">with open ...</code> statement</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> inputFile<span class=\"token punctuation\">:</span>\n  line <span class=\"token operator\">=</span> inputFile<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># this reads the first line</span>\n  <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> inputFile<span class=\"token punctuation\">:</span> <span class=\"token comment\"># this reads the rest of the lines</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span></code></pre></div>\n<p> At this point the variable <code class=\"language-text\">line</code> still contains the last line. To extract information from that line we can use the <code class=\"language-text\">split()</code> function</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">splittedLine <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># check your variable explorer to see what's in splittedLine</span>\nxCoord <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>splittedLine<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nyCoord <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>splittedLine<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nzCoord <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>splittedLine<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>To convert the text input to a number we need to use the <code class=\"language-text\">float()</code> function, if you want to convert text to an integer use <code class=\"language-text\">int()</code>.</p>\n<p>Suppose now that we want to store the whole file, we could run</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">storage <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># create an empty list</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> inputFile<span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> inputFile<span class=\"token punctuation\">:</span> \n    storage<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span> <span class=\"token comment\"># append every line to the list</span></code></pre></div>\n<p>use your variable explorer to see what has happened. </p>\n<h2 id=\"f-strings-formatting-your-output\" style=\"position:relative;\"><a href=\"#f-strings-formatting-your-output\" aria-label=\"f strings formatting your output permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>f-strings (formatting your output)</h2>\n<p>f-strings are a very nice python feature, they allow you to print the value of variables inside strings. An f-string is just a normal string with an f in front of it, an example</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">pi <span class=\"token operator\">=</span> <span class=\"token number\">3.141592653589793</span>\ninteger <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"pi has a value of </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>pi<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"pi has a value of </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>pi<span class=\"token punctuation\">:</span><span class=\"token format-spec\">10.5f</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"integer width 10: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>integer<span class=\"token punctuation\">:</span><span class=\"token format-spec\">10d</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>The first print statement should be clear on its own, in the second print statement we added <code class=\"language-text\">:10.5f</code> this indicates that the number should be printed in a field that is 10 characters wide, should contain 5 decimal places after the dot and is a float (<code class=\"language-text\">f</code>), for an integer use the letter <code class=\"language-text\">d</code>.</p>\n<h2 id=\"writing\" style=\"position:relative;\"><a href=\"#writing\" aria-label=\"writing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Writing</h2>\n<p>To write to a file we open the file in write <code class=\"language-text\">&quot;w&quot;</code> mode</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"output.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> outputFile<span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">for</span> data <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"bicycle\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"koala\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> \n    outputFile<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"here is the data: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">}</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Have a look at the <code class=\"language-text\">output.txt</code> to see what it did exactly. Note that if we write to a file we should specify where an “enter” should be placed, this is done with the new line symbol <code class=\"language-text\">\\n</code>.</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/docs/python/Python_FileIO_StringFormatting/#file-io\">File IO</a></p>\n<ul>\n<li><a href=\"/docs/python/Python_FileIO_StringFormatting/#reading\">Reading</a></li>\n<li><a href=\"/docs/python/Python_FileIO_StringFormatting/#f-strings-formatting-your-output\">f-strings (formatting your output)</a></li>\n<li><a href=\"/docs/python/Python_FileIO_StringFormatting/#writing\">Writing</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/docs/python/Python_FileIO_StringFormatting/"},"frontmatter":{"title":"File IO and String Formatting","date":null,"description":"Basic FileIO with python"}},"allMarkdownRemark":{"totalCount":24,"edges":[{"node":{"excerpt":"Some Generic Description","fields":{"slug":"/docs/book1/"},"frontmatter":{"date":null,"title":"Book 1","description":"Lorem Ipsum","tags":["Book"]}}},{"node":{"excerpt":"Some Generic Description","fields":{"slug":"/docs/book2/"},"frontmatter":{"date":null,"title":"Book 2","description":"Lorem Ipsum","tags":["Book"]}}},{"node":{"excerpt":"First Part Vivamus lectus ligula, facilisis in mauris nec, interdum dapibus ligula. Maecenas pellentesque tristique ante quis eleifend…","fields":{"slug":"/docs/book1/introduction/"},"frontmatter":{"date":null,"title":"Introduction","description":"Lorem Ipsum","tags":["markdown","math","floats"]}}},{"node":{"excerpt":"First Part Vivamus lectus ligula, facilisis in mauris nec, interdum dapibus ligula. Maecenas pellentesque tristique ante quis eleifend…","fields":{"slug":"/docs/book1/second/"},"frontmatter":{"date":null,"title":"Second Chapter","description":"Lorem Ipsum","tags":["markdown","math","floats"]}}},{"node":{"excerpt":"First Part Vivamus lectus ligula, facilisis in mauris nec, interdum dapibus ligula. Maecenas pellentesque tristique ante quis eleifend…","fields":{"slug":"/docs/book1/third/"},"frontmatter":{"date":null,"title":"Third Chapter","description":"Lorem Ipsum","tags":["markdown","math","floats"]}}},{"node":{"excerpt":"First Part Vivamus lectus ligula, facilisis in mauris nec, interdum dapibus ligula. Maecenas pellentesque tristique ante quis eleifend…","fields":{"slug":"/docs/book2/introduction/"},"frontmatter":{"date":null,"title":"Introduction","description":"Lorem Ipsum","tags":["markdown","math","floats"]}}},{"node":{"excerpt":"First Part Vivamus lectus ligula, facilisis in mauris nec, interdum dapibus ligula. Maecenas pellentesque tristique ante quis eleifend…","fields":{"slug":"/docs/book2/second/"},"frontmatter":{"date":null,"title":"Second Chapter","description":"Lorem Ipsum","tags":["markdown","math","floats"]}}},{"node":{"excerpt":"First Part Vivamus lectus ligula, facilisis in mauris nec, interdum dapibus ligula. Maecenas pellentesque tristique ante quis eleifend…","fields":{"slug":"/docs/book2/third/"},"frontmatter":{"date":null,"title":"Third Chapter","description":"Lorem Ipsum","tags":["markdown","math","floats"]}}},{"node":{"excerpt":"Some Generic Description","fields":{"slug":"/docs/python/"},"frontmatter":{"date":null,"title":"Python","description":"python","tags":["python"]}}},{"node":{"excerpt":"Introduction In this course we will build a Molecular Dynamics (MD) engine in python 3. On this page we will show you how to setup python…","fields":{"slug":"/docs/python/00_SettingUpPython/"},"frontmatter":{"date":null,"title":"Setting Up Python","description":"How to install python","tags":["install","python","anaconda"]}}},{"node":{"excerpt":"Vivamus lectus ligula, facilisis in mauris nec, interdum dapibus ligula. Maecenas pellentesque tristique ante quis eleifend. Aenean ac…","fields":{"slug":"/docs/book1/third/0codeblockSub/"},"frontmatter":{"date":null,"title":"3.1","description":"Lorem Ipsum","tags":["markdown","math","floats"]}}},{"node":{"excerpt":"Introduction Now that you have a python setup, it is time to see what it can do. The following instructions will assume you have Anaconda…","fields":{"slug":"/docs/python/01_GettingToKnowYourPythonSetup/"},"frontmatter":{"date":null,"title":"Getting To Know Your Python Setup","description":"A quick overview of the spyder IDE and a first code example.","tags":["python","spyder","beginner"]}}},{"node":{"excerpt":"Vivamus lectus ligula, facilisis in mauris nec, interdum dapibus ligula. Maecenas pellentesque tristique ante quis eleifend. Aenean ac…","fields":{"slug":"/docs/book1/second/0codeblockSub/"},"frontmatter":{"date":null,"title":"2.1","description":"Lorem Ipsum","tags":["markdown","math","floats"]}}},{"node":{"excerpt":"Introduction This is the first of our python tutorials on Canvas for 2MMN40. These tutorials are not meant as a complete reference. What…","fields":{"slug":"/docs/python/02_Python_basics/"},"frontmatter":{"date":null,"title":"Basic Python, Lists, Strings, Math, Controlstatements and Functions","description":"A minimal overview of the basic python features.","tags":["python","basics","programming"]}}},{"node":{"excerpt":"Vivamus lectus ligula, facilisis in mauris nec, interdum dapibus ligula. Maecenas pellentesque tristique ante quis eleifend. Aenean ac…","fields":{"slug":"/docs/book1/second/1codeblockSub/"},"frontmatter":{"date":null,"title":"2.2","description":"Lorem Ipsum","tags":["markdown","math","floats"]}}},{"node":{"excerpt":"Introduction NumPy is an extension of python specifically designed for doing numeric computations. The two main features of the package are…","fields":{"slug":"/docs/python/03_Numpy_basics/"},"frontmatter":{"date":null,"title":"Numpy Basics","description":"A brief overview of the most important numpy features for Scientific Computing.","tags":["python","numpy","spyder","basics"]}}},{"node":{"excerpt":"Vivamus lectus ligula, facilisis in mauris nec, interdum dapibus ligula. Maecenas pellentesque tristique ante quis eleifend. Aenean ac…","fields":{"slug":"/docs/book2/second/0codeblockSub/"},"frontmatter":{"date":null,"title":"2.1","description":"Lorem Ipsum","tags":["markdown","math","floats"]}}},{"node":{"excerpt":"File IO To start we need a file, copy paste the following into a file called  that you save in the same folder as your python script…","fields":{"slug":"/docs/python/Python_FileIO_StringFormatting/"},"frontmatter":{"date":null,"title":"File IO and String Formatting","description":"Basic FileIO with python","tags":["python","fileIO"]}}},{"node":{"excerpt":"Vivamus lectus ligula, facilisis in mauris nec, interdum dapibus ligula. Maecenas pellentesque tristique ante quis eleifend. Aenean ac…","fields":{"slug":"/docs/book2/second/1codeblockSub/"},"frontmatter":{"date":null,"title":"2.2","description":"Lorem Ipsum","tags":["markdown","math","floats"]}}},{"node":{"excerpt":"Options Parsing There might be a moment during this course in which you would like to specify options for your program. For example you…","fields":{"slug":"/docs/python/Python_OptionsAndInput/"},"frontmatter":{"date":null,"title":"Options Parsing","description":"Options parsing with python","tags":["xml","python","optionparsing"]}}},{"node":{"excerpt":"Vivamus lectus ligula, facilisis in mauris nec, interdum dapibus ligula. Maecenas pellentesque tristique ante quis eleifend. Aenean ac…","fields":{"slug":"/docs/book2/third/0codeblockSub/"},"frontmatter":{"date":null,"title":"3.1","description":"Lorem Ipsum","tags":["markdown","math","floats"]}}},{"node":{"excerpt":"Introduction As you start to write more and more code, it becomes important to organize that code. There are many ways to do this and many…","fields":{"slug":"/docs/python/Python_OrganizingALargeProject/"},"frontmatter":{"date":null,"title":"Organizing Code","description":"Functional and Procedural programming, python modules.","tags":["python","largeproject"]}}},{"node":{"excerpt":"Introduction Here we will discuss some basics of the software package named Visual Molecular\nDynamics (VMD). It can be used to make fancy…","fields":{"slug":"/docs/python/VMD_basics/"},"frontmatter":{"date":null,"title":"VMD A very basic tutorial","description":"VMD install and brief tutorial","tags":["vmd","molecules"]}}},{"node":{"excerpt":"Python Resources Here is a list of great sources of information for python, numpy and matplotlib. The Official Python Tutorial If you want a…","fields":{"slug":"/docs/python/Python_online_resources/"},"frontmatter":{"date":null,"title":"How to Learn Python Resources","description":"Sources to learn python","tags":["python","resources"]}}}]}},"pageContext":{"slug":"/docs/python/Python_FileIO_StringFormatting/","previous":{"fields":{"slug":"/docs/book2/second/1codeblockSub/"},"frontmatter":{"title":"2.2","tags":["markdown","math","floats"]}},"next":{"fields":{"slug":"/docs/book2/second/0codeblockSub/"},"frontmatter":{"title":"2.1","tags":["markdown","math","floats"]}}}},"staticQueryHashes":["1163865869","63159454"]}