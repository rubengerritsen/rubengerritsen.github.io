{"version":3,"sources":["webpack:///./src/components/postCard.js","webpack:///./src/components/tag.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/pages/qmc.js"],"names":["props","className","count","postClass","node","frontmatter","thumbnail","style","backgroundImage","childImageSharp","fluid","src","ContentWithImage","ContentNoImage","render","this","tags","to","fields","slug","title","date","description","excerpt","Component","Tags","map","tag","key","_","kebabCase","module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","AboutPage","location","siteTitle","data","site","siteMetadata","query"],"mappings":"kLAIe,aAAAA,GAAK,OAClB,6BACEC,UAAS,cAAeD,EAAME,MAAQ,GAAM,GAApB,mBAAf,IACPF,EAAMG,UADC,KAELH,EAAMI,KAAKC,YAAYC,UAAvB,yBACJC,MACEP,EAAMI,KAAKC,YAAYC,WAAa,CAClCE,gBAAgB,OACdR,EAAMI,KAAKC,YAAYC,UAAUG,gBAAgBC,MAAMC,IAD1C,MAOfX,EAAMI,KAAKC,YAAYC,UACnB,kBAACM,EAAD,CAAkBZ,MAAOA,IACzB,kBAACa,EAAD,CAAgBb,MAAOA,M,IAK7Ba,E,kGACJC,OAAA,WAAU,IACFd,EAAOe,KAAKf,MAAZA,MACN,OACE,yBAAKC,UAAU,qBACb,6BACA,kBAAC,IAAD,CAAMe,KAAMhB,EAAMI,KAAKC,YAAYW,QAEnC,6BACA,kBAAC,IAAD,CAAMC,GAAIjB,EAAMI,KAAKc,OAAOC,KAAMlB,UAAU,kBAC1C,wBAAIA,UAAU,mBACXD,EAAMI,KAAKC,YAAYe,OAASpB,EAAMI,KAAKc,OAAOC,QAIvD,yBAAKlB,UAAU,kBACdD,EAAMI,KAAKC,YAAYgB,MAExB,yBAAKpB,UAAU,kBACdD,EAAMI,KAAKC,YAAYiB,aAAetB,EAAMI,KAAKmB,SAElD,6BACA,kBAAC,IAAD,CAAMN,GAAIjB,EAAMI,KAAKc,OAAOC,KAAMlB,UAAU,qCAExCD,EAAMI,KAAKC,YAAYiB,aAAetB,EAAMI,KAAKmB,QAC7C,YACA,S,GA1BaC,aAmCvBZ,E,kGACJE,OAAA,WAAU,IACFd,EAAOe,KAAKf,MAAZA,MACN,OACE,kBAAC,IAAD,CAAMiB,GAAIjB,EAAMI,KAAKc,OAAOC,KAAMlB,UAAU,kBAC1C,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,mBACXD,EAAMI,KAAKC,YAAYe,OAASpB,EAAMI,KAAKc,OAAOC,S,GAPhCK,c,wGCxDzBC,E,kGACJX,OAAA,WAAU,IACAE,EAASD,KAAKf,MAAdgB,KACR,OACE,yBAAKf,UAAU,kBACZe,GACCA,EAAKU,KAAI,SAAAC,GAAG,OACV,0BAAMC,IAAKD,GACX,kBAAC,IAAD,CAAM1B,UAAU,qBAChB2B,IAAKD,EAELV,GAAE,SAAWY,IAAEC,UAAUH,IAHzB,IAKEA,GAED,U,GAfMH,aAsBJC,O,mBC1BfM,EAAOC,QAAU,SAASD,GAoBzB,OAnBKA,EAAOE,kBACXF,EAAOG,UAAY,aACnBH,EAAOI,MAAQ,GAEVJ,EAAOK,WAAUL,EAAOK,SAAW,IACxCC,OAAOC,eAAeP,EAAQ,SAAU,CACvCQ,YAAY,EACZC,IAAK,WACJ,OAAOT,EAAOU,KAGhBJ,OAAOC,eAAeP,EAAQ,KAAM,CACnCQ,YAAY,EACZC,IAAK,WACJ,OAAOT,EAAOW,KAGhBX,EAAOE,gBAAkB,GAEnBF,I,kCCpBR,oEAUMY,GAVN,8BAUkB,SAAC,EAAUC,GAAc,IACnCC,EADkC,EAArBC,KACIC,KAAKC,aAAa5B,MAEzC,OACE,kBAAC,IAAD,CAAQA,MAAOyB,GACb,kBAAC,IAAD,CAAKzB,MAAM,UACX,6BAASnB,UAAU,uCACjB,yBAAKA,UAAU,qBACb,6DAGA,qDAkDK,mBAAAD,GAAK,OAClB,kBAAC,IAAD,CACEiD,MA3CY,YA4CZnC,OAAQ,SAAAgC,GAAI,OACV,kBAACH,EAAD,eAAWC,SAAU5C,EAAM4C,SAAUE,KAAMA,GAAU9C","file":"component---src-pages-qmc-js-823af4a6c443040c2654.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"gatsby\"\nimport Tags from \"./tag\"\n\nexport default props => (\n  <article\n    className={`post-card ${props.count % 3 === 0 && `post-card-large`} ${\n      props.postClass\n    } ${props.node.frontmatter.thumbnail ? `with-image` : `no-image`}`}\n    style={\n      props.node.frontmatter.thumbnail && {\n        backgroundImage: `url(${\n          props.node.frontmatter.thumbnail.childImageSharp.fluid.src\n        })`,\n      }\n    }\n  >\n      {\n        props.node.frontmatter.thumbnail\n          ?(<ContentWithImage props={props}/>)\n          :(<ContentNoImage props={props}/>)\n      }\n  </article>\n)\n\nclass ContentNoImage extends Component {\n  render() {\n    const{props}=this.props;\n    return (\n      <div className=\"post-card-content\">\n        <div>\n        <Tags tags={props.node.frontmatter.tags}/>\n        </div>\n        <div>\n        <Link to={props.node.fields.slug} className=\"post-card-link\">\n          <h2 className=\"post-card-title\">\n            {props.node.frontmatter.title || props.node.fields.slug}\n          </h2>\n        </Link>\n        </div>\n        <div className=\"post-card-date\">\n        {props.node.frontmatter.date}\n        </div>\n        <div className=\"post-card-body\">\n        {props.node.frontmatter.description || props.node.excerpt}\n        </div>\n        <div>\n        <Link to={props.node.fields.slug} className=\"post-card-link post-card-readmore\">\n          {\n            props.node.frontmatter.description || props.node.excerpt\n              ?(\"Read more\")\n              :(null)\n          }\n        </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass ContentWithImage extends Component {\n  render() {\n    const{props}=this.props;\n    return (\n      <Link to={props.node.fields.slug} className=\"post-card-link\">\n        <div className=\"post-card-content\">\n          <h2 className=\"post-card-title\">\n            {props.node.frontmatter.title || props.node.fields.slug}\n          </h2>\n        </div>\n      </Link>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\n\nclass Tags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className=\"post-card-tags\">\n        {tags &&\n          tags.map(tag => (\n            <span key={tag}>\n            <Link className=\"post-card-tag-link\"\n            key={tag}\n            // style={{ textDecoration: \"none\" }}\n            to={`/tags/${_.kebabCase(tag)}`}\n            >\n            #{tag}\n            </Link>\n            {\" \"}</span>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default Tags;","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostCard from \"../components/postCard\"\n\nimport \"../style/normalize.css\"\nimport \"../style/all.scss\"\n\nconst AboutPage = ({ data }, location) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout title={siteTitle}>\n      <SEO title=\"About\" />\n      <article className=\"post-content page-template no-image\">\n        <div className=\"post-content-body\">\n          <h2>\n            Quantum Mechanics & Chemistry\n          </h2>\n          <p>\n            Nothing here yet.\n          </p>\n        </div>\n      </article>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    benchAccounting: file(\n      relativePath: { eq: \"pp_ruben_online.png\" }\n    ) {\n      childImageSharp {\n        fluid(maxWidth: 1360) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    allMarkdownRemark(filter: {fileAbsolutePath: {regex: \"/hobbyprojects/\"  }}, sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM D, YYYY\")\n            title\n            description\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <AboutPage location={props.location} data={data} {...props} />\n    )}\n  />\n)\n"],"sourceRoot":""}